{
  '$fault': 'client',
  '$response': HttpResponse {
    statusCode: 400,
    reason: 'Bad Request',
    headers: {
      server: 'Server',
      date: 'Thu, 02 Oct 2025 20:05:15 GMT',
      'content-type': 'application/x-amz-json-1.0',
      'content-length': '149',
      connection: 'keep-alive',
      'x-amzn-requestid': '5GSPKT1MQHH9FRAINDNFFI597JVV4KQNSO5AEMVJF66Q9ASUAAJG',
      'x-amz-crc32': '2820601652'
    },
    body: <ref *3> IncomingMessage {
      _events: {
        close: undefined,
        error: [Function (anonymous)],
        data: undefined,
        end: [Function: responseOnEnd],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 110892924
      },
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Server',
        'Date',
        'Thu, 02 Oct 2025 20:05:15 GMT',
        'Content-Type',
        'application/x-amz-json-1.0',
        'Content-Length',
        '149',
        'Connection',
        'keep-alive',
        'x-amzn-RequestId',
        '5GSPKT1MQHH9FRAINDNFFI597JVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32',
        '2820601652'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dynamodb.us-east-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: bound onceWrapper] {
              listener: [Function (anonymous)]
            },
            [Function: onClose]
          ],
          end: [Function: onReadableStreamEnd],
          error: [Function: bound onceWrapper] {
            listener: [Function: freeSocketErrorListener]
          },
          newListener: [Function: keylogNewListener],
          connect: undefined,
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          data: undefined,
          drain: undefined
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dynamodb.us-east-1.amazonaws.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17563908,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: null
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: null,
        timeout: 0,
        [Symbol(alpncallback)]: null,
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: -1,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 1,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          headers: {
            'content-type': 'application/x-amz-json-1.0',
            'x-amz-target': 'DynamoDB_20120810.Query',
            'content-length': '206',
            'x-amz-user-agent': 'aws-sdk-js/3.899.0',
            'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
            host: 'dynamodb.us-east-1.amazonaws.com',
            'amz-sdk-invocation-id': '02cfc68a-cc8a-4693-be29-91bd8ef2afaa',
            'amz-sdk-request': 'attempt=1; max=3',
            'x-amz-date': '20251002T200513Z',
            'x-amz-content-sha256': '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d',
            authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=46a0bf8ed85de46d16f219a14fc66f72aecd52c1bc22b73efc28c9b7185cdabc'
          },
          host: 'dynamodb.us-east-1.amazonaws.com',
          method: 'POST',
          path: null,
          port: 443,
          agent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              maxSockets: 50,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {
              'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
            },
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: 50,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          auth: undefined,
          _defaultAgent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              scheduling: 'lifo',
              timeout: 5000,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          keepAlive: true,
          maxSockets: 50,
          noDelay: true,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _consuming: false,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype] {
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 206,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'POST / HTTP/1.1\r\n' +
          'content-type: application/x-amz-json-1.0\r\n' +
          'x-amz-target: DynamoDB_20120810.Query\r\n' +
          'content-length: 206\r\n' +
          'x-amz-user-agent: aws-sdk-js/3.899.0\r\n' +
          'user-agent: aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g\r\n' +
          'host: dynamodb.us-east-1.amazonaws.com\r\n' +
          'amz-sdk-invocation-id: 02cfc68a-cc8a-4693-be29-91bd8ef2afaa\r\n' +
          'amz-sdk-request: attempt=1; max=3\r\n' +
          'x-amz-date: 20251002T200513Z\r\n' +
          'x-amz-content-sha256: 3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d\r\n' +
          'authorization: AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=46a0bf8ed85de46d16f219a14fc66f72aecd52c1bc22b73efc28c9b7185cdabc\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: <ref *2> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] {
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            path: null
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {
            'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [
              <ref *1> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: false,
                _SNICallback: null,
                servername: 'dynamodb.us-east-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose]
                  ],
                  end: [Function: onReadableStreamEnd],
                  error: [Function: bound onceWrapper] {
                    listener: [Function: freeSocketErrorListener]
                  },
                  newListener: [Function: keylogNewListener],
                  connect: undefined,
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  data: undefined,
                  drain: undefined
                },
                _eventsCount: 9,
                connecting: false,
                _hadError: false,
                _parent: null,
                _host: 'dynamodb.us-east-1.amazonaws.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  highWaterMark: 16384,
                  buffer: [],
                  bufferIndex: 0,
                  length: 0,
                  pipes: [],
                  awaitDrainWriters: null,
                  [Symbol(kState)]: 60303620
                },
                _writableState: WritableState {
                  highWaterMark: 16384,
                  length: 0,
                  corked: 0,
                  onwrite: [Function: bound onwrite],
                  writelen: 0,
                  bufferedIndex: 0,
                  pendingcb: 0,
                  [Symbol(kState)]: 17563908,
                  [Symbol(kBufferedValue)]: null,
                  [Symbol(kWriteCbValue)]: null
                },
                allowHalfOpen: false,
                _maxListeners: undefined,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: null,
                timeout: 0,
                [Symbol(alpncallback)]: null,
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(verified)]: true,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: -1,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(shapeMode)]: true,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 1,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  headers: {
                    'content-type': 'application/x-amz-json-1.0',
                    'x-amz-target': 'DynamoDB_20120810.Query',
                    'content-length': '206',
                    'x-amz-user-agent': 'aws-sdk-js/3.899.0',
                    'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
                    host: 'dynamodb.us-east-1.amazonaws.com',
                    'amz-sdk-invocation-id': '02cfc68a-cc8a-4693-be29-91bd8ef2afaa',
                    'amz-sdk-request': 'attempt=1; max=3',
                    'x-amz-date': '20251002T200513Z',
                    'x-amz-content-sha256': '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d',
                    authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=46a0bf8ed85de46d16f219a14fc66f72aecd52c1bc22b73efc28c9b7185cdabc'
                  },
                  host: 'dynamodb.us-east-1.amazonaws.com',
                  method: 'POST',
                  path: null,
                  port: 443,
                  agent: [Circular *2],
                  auth: undefined,
                  _defaultAgent: Agent {
                    _events: [Object: null prototype] {
                      free: [Function (anonymous)],
                      newListener: [Function: maybeEnableKeylog]
                    },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: [Object: null prototype] {
                      keepAlive: true,
                      scheduling: 'lifo',
                      timeout: 5000,
                      noDelay: true,
                      path: null
                    },
                    requests: [Object: null prototype] {},
                    sockets: [Object: null prototype] {},
                    freeSockets: [Object: null prototype] {},
                    keepAliveMsecs: 1000,
                    keepAlive: true,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    scheduling: 'lifo',
                    maxTotalSockets: Infinity,
                    totalSocketCount: 0,
                    maxCachedSessions: 100,
                    _sessionCache: { map: {}, list: [] },
                    [Symbol(shapeMode)]: false,
                    [Symbol(kCapture)]: false
                  },
                  keepAlive: true,
                  maxSockets: 50,
                  noDelay: true,
                  servername: 'dynamodb.us-east-1.amazonaws.com',
                  _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
                  encoding: null,
                  keepAliveInitialDelay: 1000
                }
              }
            ]
          },
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: 50,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: {}, list: [] },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/',
        _ended: true,
        res: [Circular *3],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'dynamodb.us-east-1.amazonaws.com',
        protocol: 'https:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: bound onceWrapper] {
                listener: [Function (anonymous)]
              },
              [Function: onClose]
            ],
            end: [Function: onReadableStreamEnd],
            error: [Function: bound onceWrapper] {
              listener: [Function: freeSocketErrorListener]
            },
            newListener: [Function: keylogNewListener],
            connect: undefined,
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            data: undefined,
            drain: undefined
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'dynamodb.us-east-1.amazonaws.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 0,
            [Symbol(kState)]: 17563908,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: null
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: null,
          timeout: 0,
          [Symbol(alpncallback)]: null,
          [Symbol(res)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            headers: {
              'content-type': 'application/x-amz-json-1.0',
              'x-amz-target': 'DynamoDB_20120810.Query',
              'content-length': '206',
              'x-amz-user-agent': 'aws-sdk-js/3.899.0',
              'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
              host: 'dynamodb.us-east-1.amazonaws.com',
              'amz-sdk-invocation-id': '02cfc68a-cc8a-4693-be29-91bd8ef2afaa',
              'amz-sdk-request': 'attempt=1; max=3',
              'x-amz-date': '20251002T200513Z',
              'x-amz-content-sha256': '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d',
              authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=46a0bf8ed85de46d16f219a14fc66f72aecd52c1bc22b73efc28c9b7185cdabc'
            },
            host: 'dynamodb.us-east-1.amazonaws.com',
            method: 'POST',
            path: null,
            port: 443,
            agent: <ref *2> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                maxSockets: 50,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {
                'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
              },
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: 50,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            auth: undefined,
            _defaultAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            servername: 'dynamodb.us-east-1.amazonaws.com',
            _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
            encoding: null,
            keepAliveInitialDelay: 1000
          }
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'content-type': [ 'content-type', 'application/x-amz-json-1.0' ],
          'x-amz-target': [ 'x-amz-target', 'DynamoDB_20120810.Query' ],
          'content-length': [ 'content-length', '206' ],
          'x-amz-user-agent': [ 'x-amz-user-agent', 'aws-sdk-js/3.899.0' ],
          'user-agent': [
            'user-agent',
            'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g'
          ],
          host: [ 'host', 'dynamodb.us-east-1.amazonaws.com' ],
          'amz-sdk-invocation-id': [
            'amz-sdk-invocation-id',
            '02cfc68a-cc8a-4693-be29-91bd8ef2afaa'
          ],
          'amz-sdk-request': [ 'amz-sdk-request', 'attempt=1; max=3' ],
          'x-amz-date': [ 'x-amz-date', '20251002T200513Z' ],
          'x-amz-content-sha256': [
            'x-amz-content-sha256',
            '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d'
          ],
          authorization: [
            'authorization',
            'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=46a0bf8ed85de46d16f219a14fc66f72aecd52c1bc22b73efc28c9b7185cdabc'
          ]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 2,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Server',
        date: 'Thu, 02 Oct 2025 20:05:15 GMT',
        'content-type': 'application/x-amz-json-1.0',
        'content-length': '149',
        connection: 'keep-alive',
        'x-amzn-requestid': '5GSPKT1MQHH9FRAINDNFFI597JVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32': '2820601652'
      },
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  },
  '$retryable': undefined,
  '$metadata': {
    httpStatusCode: 400,
    requestId: '5GSPKT1MQHH9FRAINDNFFI597JVV4KQNSO5AEMVJF66Q9ASUAAJG',
    extendedRequestId: undefined,
    cfId: undefined,
    attempts: 1,
    totalRetryDelay: 0
  },
  name: 'ValidationException',
  __type: 'com.amazon.coral.validate#ValidationException',
  message: 'ExpressionAttributeValues contains invalid key: Syntax error; key: "skValue"',
  level: 'error',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:05:14.113Z'
}
{
  '$fault': 'client',
  '$response': HttpResponse {
    statusCode: 400,
    reason: 'Bad Request',
    headers: {
      server: 'Server',
      date: 'Thu, 02 Oct 2025 20:05:48 GMT',
      'content-type': 'application/x-amz-json-1.0',
      'content-length': '149',
      connection: 'keep-alive',
      'x-amzn-requestid': '01V2LU6GS904CMQSD4P7KRIKA7VV4KQNSO5AEMVJF66Q9ASUAAJG',
      'x-amz-crc32': '2820601652'
    },
    body: <ref *3> IncomingMessage {
      _events: {
        close: undefined,
        error: [Function (anonymous)],
        data: undefined,
        end: [Function: responseOnEnd],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 110892924
      },
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Server',
        'Date',
        'Thu, 02 Oct 2025 20:05:48 GMT',
        'Content-Type',
        'application/x-amz-json-1.0',
        'Content-Length',
        '149',
        'Connection',
        'keep-alive',
        'x-amzn-RequestId',
        '01V2LU6GS904CMQSD4P7KRIKA7VV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32',
        '2820601652'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dynamodb.us-east-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: bound onceWrapper] {
              listener: [Function (anonymous)]
            },
            [Function: onClose]
          ],
          end: [Function: onReadableStreamEnd],
          error: [Function: bound onceWrapper] {
            listener: [Function: freeSocketErrorListener]
          },
          newListener: [Function: keylogNewListener],
          connect: undefined,
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          data: undefined,
          drain: undefined
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dynamodb.us-east-1.amazonaws.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17563908,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: null
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: null,
        timeout: 0,
        [Symbol(alpncallback)]: null,
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: -1,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 1,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          headers: {
            'content-type': 'application/x-amz-json-1.0',
            'x-amz-target': 'DynamoDB_20120810.Query',
            'content-length': '206',
            'x-amz-user-agent': 'aws-sdk-js/3.899.0',
            'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
            host: 'dynamodb.us-east-1.amazonaws.com',
            'amz-sdk-invocation-id': 'bccf9424-2a0e-42b9-bcff-b49828c47364',
            'amz-sdk-request': 'attempt=1; max=3',
            'x-amz-date': '20251002T200547Z',
            'x-amz-content-sha256': '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d',
            authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d9a81ae2712954cd47ec70063f7583c443d27c5dbf235c2797d989ae0ad3a435'
          },
          host: 'dynamodb.us-east-1.amazonaws.com',
          method: 'POST',
          path: null,
          port: 443,
          agent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              maxSockets: 50,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {
              'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
            },
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: 50,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          auth: undefined,
          _defaultAgent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              scheduling: 'lifo',
              timeout: 5000,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          keepAlive: true,
          maxSockets: 50,
          noDelay: true,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _consuming: false,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype] {
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 206,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'POST / HTTP/1.1\r\n' +
          'content-type: application/x-amz-json-1.0\r\n' +
          'x-amz-target: DynamoDB_20120810.Query\r\n' +
          'content-length: 206\r\n' +
          'x-amz-user-agent: aws-sdk-js/3.899.0\r\n' +
          'user-agent: aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g\r\n' +
          'host: dynamodb.us-east-1.amazonaws.com\r\n' +
          'amz-sdk-invocation-id: bccf9424-2a0e-42b9-bcff-b49828c47364\r\n' +
          'amz-sdk-request: attempt=1; max=3\r\n' +
          'x-amz-date: 20251002T200547Z\r\n' +
          'x-amz-content-sha256: 3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d\r\n' +
          'authorization: AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d9a81ae2712954cd47ec70063f7583c443d27c5dbf235c2797d989ae0ad3a435\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: <ref *2> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] {
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            path: null
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {
            'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [
              <ref *1> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: false,
                _SNICallback: null,
                servername: 'dynamodb.us-east-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose]
                  ],
                  end: [Function: onReadableStreamEnd],
                  error: [Function: bound onceWrapper] {
                    listener: [Function: freeSocketErrorListener]
                  },
                  newListener: [Function: keylogNewListener],
                  connect: undefined,
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  data: undefined,
                  drain: undefined
                },
                _eventsCount: 9,
                connecting: false,
                _hadError: false,
                _parent: null,
                _host: 'dynamodb.us-east-1.amazonaws.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  highWaterMark: 16384,
                  buffer: [],
                  bufferIndex: 0,
                  length: 0,
                  pipes: [],
                  awaitDrainWriters: null,
                  [Symbol(kState)]: 60303620
                },
                _writableState: WritableState {
                  highWaterMark: 16384,
                  length: 0,
                  corked: 0,
                  onwrite: [Function: bound onwrite],
                  writelen: 0,
                  bufferedIndex: 0,
                  pendingcb: 0,
                  [Symbol(kState)]: 17563908,
                  [Symbol(kBufferedValue)]: null,
                  [Symbol(kWriteCbValue)]: null
                },
                allowHalfOpen: false,
                _maxListeners: undefined,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: null,
                timeout: 0,
                [Symbol(alpncallback)]: null,
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(verified)]: true,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: -1,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(shapeMode)]: true,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 1,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  headers: {
                    'content-type': 'application/x-amz-json-1.0',
                    'x-amz-target': 'DynamoDB_20120810.Query',
                    'content-length': '206',
                    'x-amz-user-agent': 'aws-sdk-js/3.899.0',
                    'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
                    host: 'dynamodb.us-east-1.amazonaws.com',
                    'amz-sdk-invocation-id': 'bccf9424-2a0e-42b9-bcff-b49828c47364',
                    'amz-sdk-request': 'attempt=1; max=3',
                    'x-amz-date': '20251002T200547Z',
                    'x-amz-content-sha256': '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d',
                    authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d9a81ae2712954cd47ec70063f7583c443d27c5dbf235c2797d989ae0ad3a435'
                  },
                  host: 'dynamodb.us-east-1.amazonaws.com',
                  method: 'POST',
                  path: null,
                  port: 443,
                  agent: [Circular *2],
                  auth: undefined,
                  _defaultAgent: Agent {
                    _events: [Object: null prototype] {
                      free: [Function (anonymous)],
                      newListener: [Function: maybeEnableKeylog]
                    },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: [Object: null prototype] {
                      keepAlive: true,
                      scheduling: 'lifo',
                      timeout: 5000,
                      noDelay: true,
                      path: null
                    },
                    requests: [Object: null prototype] {},
                    sockets: [Object: null prototype] {},
                    freeSockets: [Object: null prototype] {},
                    keepAliveMsecs: 1000,
                    keepAlive: true,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    scheduling: 'lifo',
                    maxTotalSockets: Infinity,
                    totalSocketCount: 0,
                    maxCachedSessions: 100,
                    _sessionCache: { map: {}, list: [] },
                    [Symbol(shapeMode)]: false,
                    [Symbol(kCapture)]: false
                  },
                  keepAlive: true,
                  maxSockets: 50,
                  noDelay: true,
                  servername: 'dynamodb.us-east-1.amazonaws.com',
                  _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
                  encoding: null,
                  keepAliveInitialDelay: 1000
                }
              }
            ]
          },
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: 50,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: {}, list: [] },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/',
        _ended: true,
        res: [Circular *3],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'dynamodb.us-east-1.amazonaws.com',
        protocol: 'https:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: bound onceWrapper] {
                listener: [Function (anonymous)]
              },
              [Function: onClose]
            ],
            end: [Function: onReadableStreamEnd],
            error: [Function: bound onceWrapper] {
              listener: [Function: freeSocketErrorListener]
            },
            newListener: [Function: keylogNewListener],
            connect: undefined,
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            data: undefined,
            drain: undefined
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'dynamodb.us-east-1.amazonaws.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 0,
            [Symbol(kState)]: 17563908,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: null
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: null,
          timeout: 0,
          [Symbol(alpncallback)]: null,
          [Symbol(res)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            headers: {
              'content-type': 'application/x-amz-json-1.0',
              'x-amz-target': 'DynamoDB_20120810.Query',
              'content-length': '206',
              'x-amz-user-agent': 'aws-sdk-js/3.899.0',
              'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
              host: 'dynamodb.us-east-1.amazonaws.com',
              'amz-sdk-invocation-id': 'bccf9424-2a0e-42b9-bcff-b49828c47364',
              'amz-sdk-request': 'attempt=1; max=3',
              'x-amz-date': '20251002T200547Z',
              'x-amz-content-sha256': '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d',
              authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d9a81ae2712954cd47ec70063f7583c443d27c5dbf235c2797d989ae0ad3a435'
            },
            host: 'dynamodb.us-east-1.amazonaws.com',
            method: 'POST',
            path: null,
            port: 443,
            agent: <ref *2> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                maxSockets: 50,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {
                'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
              },
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: 50,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            auth: undefined,
            _defaultAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            servername: 'dynamodb.us-east-1.amazonaws.com',
            _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
            encoding: null,
            keepAliveInitialDelay: 1000
          }
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'content-type': [ 'content-type', 'application/x-amz-json-1.0' ],
          'x-amz-target': [ 'x-amz-target', 'DynamoDB_20120810.Query' ],
          'content-length': [ 'content-length', '206' ],
          'x-amz-user-agent': [ 'x-amz-user-agent', 'aws-sdk-js/3.899.0' ],
          'user-agent': [
            'user-agent',
            'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g'
          ],
          host: [ 'host', 'dynamodb.us-east-1.amazonaws.com' ],
          'amz-sdk-invocation-id': [
            'amz-sdk-invocation-id',
            'bccf9424-2a0e-42b9-bcff-b49828c47364'
          ],
          'amz-sdk-request': [ 'amz-sdk-request', 'attempt=1; max=3' ],
          'x-amz-date': [ 'x-amz-date', '20251002T200547Z' ],
          'x-amz-content-sha256': [
            'x-amz-content-sha256',
            '3e2f5e5bde8667d64e8de3d285538303323278a0c4f270204ac825af2c5b3d5d'
          ],
          authorization: [
            'authorization',
            'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d9a81ae2712954cd47ec70063f7583c443d27c5dbf235c2797d989ae0ad3a435'
          ]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 2,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Server',
        date: 'Thu, 02 Oct 2025 20:05:48 GMT',
        'content-type': 'application/x-amz-json-1.0',
        'content-length': '149',
        connection: 'keep-alive',
        'x-amzn-requestid': '01V2LU6GS904CMQSD4P7KRIKA7VV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32': '2820601652'
      },
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  },
  '$retryable': undefined,
  '$metadata': {
    httpStatusCode: 400,
    requestId: '01V2LU6GS904CMQSD4P7KRIKA7VV4KQNSO5AEMVJF66Q9ASUAAJG',
    extendedRequestId: undefined,
    cfId: undefined,
    attempts: 1,
    totalRetryDelay: 0
  },
  name: 'ValidationException',
  __type: 'com.amazon.coral.validate#ValidationException',
  message: 'ExpressionAttributeValues contains invalid key: Syntax error; key: "skValue"',
  level: 'error',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:05:47.414Z'
}
{
  '$fault': 'client',
  '$response': HttpResponse {
    statusCode: 400,
    reason: 'Bad Request',
    headers: {
      server: 'Server',
      date: 'Thu, 02 Oct 2025 20:08:46 GMT',
      'content-type': 'application/x-amz-json-1.0',
      'content-length': '149',
      connection: 'keep-alive',
      'x-amzn-requestid': 'ABDOOKTVRJU4FOVNGFD5M7317VVV4KQNSO5AEMVJF66Q9ASUAAJG',
      'x-amz-crc32': '2820601652'
    },
    body: <ref *3> IncomingMessage {
      _events: {
        close: undefined,
        error: [Function (anonymous)],
        data: undefined,
        end: [Function: responseOnEnd],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 110892924
      },
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Server',
        'Date',
        'Thu, 02 Oct 2025 20:08:46 GMT',
        'Content-Type',
        'application/x-amz-json-1.0',
        'Content-Length',
        '149',
        'Connection',
        'keep-alive',
        'x-amzn-RequestId',
        'ABDOOKTVRJU4FOVNGFD5M7317VVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32',
        '2820601652'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dynamodb.us-east-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: bound onceWrapper] {
              listener: [Function (anonymous)]
            },
            [Function: onClose]
          ],
          end: [Function: onReadableStreamEnd],
          error: [Function: bound onceWrapper] {
            listener: [Function: freeSocketErrorListener]
          },
          newListener: [Function: keylogNewListener],
          connect: undefined,
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          data: undefined,
          drain: undefined
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dynamodb.us-east-1.amazonaws.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17563908,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: null
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: null,
        timeout: 0,
        [Symbol(alpncallback)]: null,
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: -1,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 1,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          headers: {
            'content-type': 'application/x-amz-json-1.0',
            'x-amz-target': 'DynamoDB_20120810.Query',
            'content-length': '230',
            'x-amz-user-agent': 'aws-sdk-js/3.899.0',
            'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
            host: 'dynamodb.us-east-1.amazonaws.com',
            'amz-sdk-invocation-id': '08857b1d-257f-41f3-b480-19379fe113f1',
            'amz-sdk-request': 'attempt=1; max=3',
            'x-amz-date': '20251002T200845Z',
            'x-amz-content-sha256': '351ee7c50b71b594d5e4c606604e560fe02948d7906b64d345235e2ba6727ee5',
            authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=42f4f54c0209d7f6eb04d536241fb65f9c9dcf357bc4f42d0a7f3bb1c42e116f'
          },
          host: 'dynamodb.us-east-1.amazonaws.com',
          method: 'POST',
          path: null,
          port: 443,
          agent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              maxSockets: 50,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {
              'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
            },
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: 50,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          auth: undefined,
          _defaultAgent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              scheduling: 'lifo',
              timeout: 5000,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          keepAlive: true,
          maxSockets: 50,
          noDelay: true,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _consuming: false,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype] {
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 230,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'POST / HTTP/1.1\r\n' +
          'content-type: application/x-amz-json-1.0\r\n' +
          'x-amz-target: DynamoDB_20120810.Query\r\n' +
          'content-length: 230\r\n' +
          'x-amz-user-agent: aws-sdk-js/3.899.0\r\n' +
          'user-agent: aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g\r\n' +
          'host: dynamodb.us-east-1.amazonaws.com\r\n' +
          'amz-sdk-invocation-id: 08857b1d-257f-41f3-b480-19379fe113f1\r\n' +
          'amz-sdk-request: attempt=1; max=3\r\n' +
          'x-amz-date: 20251002T200845Z\r\n' +
          'x-amz-content-sha256: 351ee7c50b71b594d5e4c606604e560fe02948d7906b64d345235e2ba6727ee5\r\n' +
          'authorization: AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=42f4f54c0209d7f6eb04d536241fb65f9c9dcf357bc4f42d0a7f3bb1c42e116f\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: <ref *2> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] {
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            path: null
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {
            'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [
              <ref *1> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: false,
                _SNICallback: null,
                servername: 'dynamodb.us-east-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose]
                  ],
                  end: [Function: onReadableStreamEnd],
                  error: [Function: bound onceWrapper] {
                    listener: [Function: freeSocketErrorListener]
                  },
                  newListener: [Function: keylogNewListener],
                  connect: undefined,
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  data: undefined,
                  drain: undefined
                },
                _eventsCount: 9,
                connecting: false,
                _hadError: false,
                _parent: null,
                _host: 'dynamodb.us-east-1.amazonaws.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  highWaterMark: 16384,
                  buffer: [],
                  bufferIndex: 0,
                  length: 0,
                  pipes: [],
                  awaitDrainWriters: null,
                  [Symbol(kState)]: 60303620
                },
                _writableState: WritableState {
                  highWaterMark: 16384,
                  length: 0,
                  corked: 0,
                  onwrite: [Function: bound onwrite],
                  writelen: 0,
                  bufferedIndex: 0,
                  pendingcb: 0,
                  [Symbol(kState)]: 17563908,
                  [Symbol(kBufferedValue)]: null,
                  [Symbol(kWriteCbValue)]: null
                },
                allowHalfOpen: false,
                _maxListeners: undefined,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: null,
                timeout: 0,
                [Symbol(alpncallback)]: null,
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(verified)]: true,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: -1,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(shapeMode)]: true,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 1,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  headers: {
                    'content-type': 'application/x-amz-json-1.0',
                    'x-amz-target': 'DynamoDB_20120810.Query',
                    'content-length': '230',
                    'x-amz-user-agent': 'aws-sdk-js/3.899.0',
                    'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
                    host: 'dynamodb.us-east-1.amazonaws.com',
                    'amz-sdk-invocation-id': '08857b1d-257f-41f3-b480-19379fe113f1',
                    'amz-sdk-request': 'attempt=1; max=3',
                    'x-amz-date': '20251002T200845Z',
                    'x-amz-content-sha256': '351ee7c50b71b594d5e4c606604e560fe02948d7906b64d345235e2ba6727ee5',
                    authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=42f4f54c0209d7f6eb04d536241fb65f9c9dcf357bc4f42d0a7f3bb1c42e116f'
                  },
                  host: 'dynamodb.us-east-1.amazonaws.com',
                  method: 'POST',
                  path: null,
                  port: 443,
                  agent: [Circular *2],
                  auth: undefined,
                  _defaultAgent: Agent {
                    _events: [Object: null prototype] {
                      free: [Function (anonymous)],
                      newListener: [Function: maybeEnableKeylog]
                    },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: [Object: null prototype] {
                      keepAlive: true,
                      scheduling: 'lifo',
                      timeout: 5000,
                      noDelay: true,
                      path: null
                    },
                    requests: [Object: null prototype] {},
                    sockets: [Object: null prototype] {},
                    freeSockets: [Object: null prototype] {},
                    keepAliveMsecs: 1000,
                    keepAlive: true,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    scheduling: 'lifo',
                    maxTotalSockets: Infinity,
                    totalSocketCount: 0,
                    maxCachedSessions: 100,
                    _sessionCache: { map: {}, list: [] },
                    [Symbol(shapeMode)]: false,
                    [Symbol(kCapture)]: false
                  },
                  keepAlive: true,
                  maxSockets: 50,
                  noDelay: true,
                  servername: 'dynamodb.us-east-1.amazonaws.com',
                  _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
                  encoding: null,
                  keepAliveInitialDelay: 1000
                }
              }
            ]
          },
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: 50,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: {}, list: [] },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/',
        _ended: true,
        res: [Circular *3],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'dynamodb.us-east-1.amazonaws.com',
        protocol: 'https:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: bound onceWrapper] {
                listener: [Function (anonymous)]
              },
              [Function: onClose]
            ],
            end: [Function: onReadableStreamEnd],
            error: [Function: bound onceWrapper] {
              listener: [Function: freeSocketErrorListener]
            },
            newListener: [Function: keylogNewListener],
            connect: undefined,
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            data: undefined,
            drain: undefined
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'dynamodb.us-east-1.amazonaws.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 0,
            [Symbol(kState)]: 17563908,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: null
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: null,
          timeout: 0,
          [Symbol(alpncallback)]: null,
          [Symbol(res)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            headers: {
              'content-type': 'application/x-amz-json-1.0',
              'x-amz-target': 'DynamoDB_20120810.Query',
              'content-length': '230',
              'x-amz-user-agent': 'aws-sdk-js/3.899.0',
              'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
              host: 'dynamodb.us-east-1.amazonaws.com',
              'amz-sdk-invocation-id': '08857b1d-257f-41f3-b480-19379fe113f1',
              'amz-sdk-request': 'attempt=1; max=3',
              'x-amz-date': '20251002T200845Z',
              'x-amz-content-sha256': '351ee7c50b71b594d5e4c606604e560fe02948d7906b64d345235e2ba6727ee5',
              authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=42f4f54c0209d7f6eb04d536241fb65f9c9dcf357bc4f42d0a7f3bb1c42e116f'
            },
            host: 'dynamodb.us-east-1.amazonaws.com',
            method: 'POST',
            path: null,
            port: 443,
            agent: <ref *2> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                maxSockets: 50,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {
                'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
              },
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: 50,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            auth: undefined,
            _defaultAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            servername: 'dynamodb.us-east-1.amazonaws.com',
            _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
            encoding: null,
            keepAliveInitialDelay: 1000
          }
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'content-type': [ 'content-type', 'application/x-amz-json-1.0' ],
          'x-amz-target': [ 'x-amz-target', 'DynamoDB_20120810.Query' ],
          'content-length': [ 'content-length', '230' ],
          'x-amz-user-agent': [ 'x-amz-user-agent', 'aws-sdk-js/3.899.0' ],
          'user-agent': [
            'user-agent',
            'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g'
          ],
          host: [ 'host', 'dynamodb.us-east-1.amazonaws.com' ],
          'amz-sdk-invocation-id': [
            'amz-sdk-invocation-id',
            '08857b1d-257f-41f3-b480-19379fe113f1'
          ],
          'amz-sdk-request': [ 'amz-sdk-request', 'attempt=1; max=3' ],
          'x-amz-date': [ 'x-amz-date', '20251002T200845Z' ],
          'x-amz-content-sha256': [
            'x-amz-content-sha256',
            '351ee7c50b71b594d5e4c606604e560fe02948d7906b64d345235e2ba6727ee5'
          ],
          authorization: [
            'authorization',
            'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=42f4f54c0209d7f6eb04d536241fb65f9c9dcf357bc4f42d0a7f3bb1c42e116f'
          ]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 2,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Server',
        date: 'Thu, 02 Oct 2025 20:08:46 GMT',
        'content-type': 'application/x-amz-json-1.0',
        'content-length': '149',
        connection: 'keep-alive',
        'x-amzn-requestid': 'ABDOOKTVRJU4FOVNGFD5M7317VVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32': '2820601652'
      },
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  },
  '$retryable': undefined,
  '$metadata': {
    httpStatusCode: 400,
    requestId: 'ABDOOKTVRJU4FOVNGFD5M7317VVV4KQNSO5AEMVJF66Q9ASUAAJG',
    extendedRequestId: undefined,
    cfId: undefined,
    attempts: 1,
    totalRetryDelay: 0
  },
  name: 'ValidationException',
  __type: 'com.amazon.coral.validate#ValidationException',
  message: 'ExpressionAttributeValues contains invalid key: Syntax error; key: "skValue"',
  level: 'error',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:08:45.280Z'
}
{
  '$fault': 'client',
  '$response': HttpResponse {
    statusCode: 400,
    reason: 'Bad Request',
    headers: {
      server: 'Server',
      date: 'Thu, 02 Oct 2025 20:09:05 GMT',
      'content-type': 'application/x-amz-json-1.0',
      'content-length': '165',
      connection: 'keep-alive',
      'x-amzn-requestid': '1BBKB5LLK3RLDCQH408RCKEG5BVV4KQNSO5AEMVJF66Q9ASUAAJG',
      'x-amz-crc32': '1880536678'
    },
    body: <ref *3> IncomingMessage {
      _events: {
        close: undefined,
        error: [Function (anonymous)],
        data: undefined,
        end: [Function: responseOnEnd],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 110892924
      },
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Server',
        'Date',
        'Thu, 02 Oct 2025 20:09:05 GMT',
        'Content-Type',
        'application/x-amz-json-1.0',
        'Content-Length',
        '165',
        'Connection',
        'keep-alive',
        'x-amzn-requestid',
        '1BBKB5LLK3RLDCQH408RCKEG5BVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32',
        '1880536678'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dynamodb.us-east-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: bound onceWrapper] {
              listener: [Function (anonymous)]
            },
            [Function: onClose]
          ],
          end: [Function: onReadableStreamEnd],
          error: [Function: bound onceWrapper] {
            listener: [Function: freeSocketErrorListener]
          },
          newListener: [Function: keylogNewListener],
          connect: undefined,
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          data: undefined,
          drain: undefined
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dynamodb.us-east-1.amazonaws.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17563908,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: null
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: null,
        timeout: 0,
        [Symbol(alpncallback)]: null,
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: -1,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 1,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          headers: {
            'content-type': 'application/x-amz-json-1.0',
            'x-amz-target': 'DynamoDB_20120810.Query',
            'content-length': '231',
            'x-amz-user-agent': 'aws-sdk-js/3.899.0',
            'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
            host: 'dynamodb.us-east-1.amazonaws.com',
            'amz-sdk-invocation-id': '8d622a75-95ee-468c-b1e6-3c4f589f9c95',
            'amz-sdk-request': 'attempt=1; max=3',
            'x-amz-date': '20251002T200903Z',
            'x-amz-content-sha256': 'e029bc3e38109487f4c811be2a6c556007183d62cf922805955f6e933c1bbf79',
            authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=c00277cc26436e375e99af8f914f75968e608ad9ea921e20cf7e85740b7f0980'
          },
          host: 'dynamodb.us-east-1.amazonaws.com',
          method: 'POST',
          path: null,
          port: 443,
          agent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              maxSockets: 50,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {
              'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
            },
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: 50,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          auth: undefined,
          _defaultAgent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              scheduling: 'lifo',
              timeout: 5000,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          keepAlive: true,
          maxSockets: 50,
          noDelay: true,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _consuming: false,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype] {
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 231,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'POST / HTTP/1.1\r\n' +
          'content-type: application/x-amz-json-1.0\r\n' +
          'x-amz-target: DynamoDB_20120810.Query\r\n' +
          'content-length: 231\r\n' +
          'x-amz-user-agent: aws-sdk-js/3.899.0\r\n' +
          'user-agent: aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g\r\n' +
          'host: dynamodb.us-east-1.amazonaws.com\r\n' +
          'amz-sdk-invocation-id: 8d622a75-95ee-468c-b1e6-3c4f589f9c95\r\n' +
          'amz-sdk-request: attempt=1; max=3\r\n' +
          'x-amz-date: 20251002T200903Z\r\n' +
          'x-amz-content-sha256: e029bc3e38109487f4c811be2a6c556007183d62cf922805955f6e933c1bbf79\r\n' +
          'authorization: AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=c00277cc26436e375e99af8f914f75968e608ad9ea921e20cf7e85740b7f0980\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: <ref *2> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] {
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            path: null
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {
            'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [
              <ref *1> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: false,
                _SNICallback: null,
                servername: 'dynamodb.us-east-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose]
                  ],
                  end: [Function: onReadableStreamEnd],
                  error: [Function: bound onceWrapper] {
                    listener: [Function: freeSocketErrorListener]
                  },
                  newListener: [Function: keylogNewListener],
                  connect: undefined,
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  data: undefined,
                  drain: undefined
                },
                _eventsCount: 9,
                connecting: false,
                _hadError: false,
                _parent: null,
                _host: 'dynamodb.us-east-1.amazonaws.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  highWaterMark: 16384,
                  buffer: [],
                  bufferIndex: 0,
                  length: 0,
                  pipes: [],
                  awaitDrainWriters: null,
                  [Symbol(kState)]: 60303620
                },
                _writableState: WritableState {
                  highWaterMark: 16384,
                  length: 0,
                  corked: 0,
                  onwrite: [Function: bound onwrite],
                  writelen: 0,
                  bufferedIndex: 0,
                  pendingcb: 0,
                  [Symbol(kState)]: 17563908,
                  [Symbol(kBufferedValue)]: null,
                  [Symbol(kWriteCbValue)]: null
                },
                allowHalfOpen: false,
                _maxListeners: undefined,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: null,
                timeout: 0,
                [Symbol(alpncallback)]: null,
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(verified)]: true,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: -1,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(shapeMode)]: true,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 1,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  headers: {
                    'content-type': 'application/x-amz-json-1.0',
                    'x-amz-target': 'DynamoDB_20120810.Query',
                    'content-length': '231',
                    'x-amz-user-agent': 'aws-sdk-js/3.899.0',
                    'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
                    host: 'dynamodb.us-east-1.amazonaws.com',
                    'amz-sdk-invocation-id': '8d622a75-95ee-468c-b1e6-3c4f589f9c95',
                    'amz-sdk-request': 'attempt=1; max=3',
                    'x-amz-date': '20251002T200903Z',
                    'x-amz-content-sha256': 'e029bc3e38109487f4c811be2a6c556007183d62cf922805955f6e933c1bbf79',
                    authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=c00277cc26436e375e99af8f914f75968e608ad9ea921e20cf7e85740b7f0980'
                  },
                  host: 'dynamodb.us-east-1.amazonaws.com',
                  method: 'POST',
                  path: null,
                  port: 443,
                  agent: [Circular *2],
                  auth: undefined,
                  _defaultAgent: Agent {
                    _events: [Object: null prototype] {
                      free: [Function (anonymous)],
                      newListener: [Function: maybeEnableKeylog]
                    },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: [Object: null prototype] {
                      keepAlive: true,
                      scheduling: 'lifo',
                      timeout: 5000,
                      noDelay: true,
                      path: null
                    },
                    requests: [Object: null prototype] {},
                    sockets: [Object: null prototype] {},
                    freeSockets: [Object: null prototype] {},
                    keepAliveMsecs: 1000,
                    keepAlive: true,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    scheduling: 'lifo',
                    maxTotalSockets: Infinity,
                    totalSocketCount: 0,
                    maxCachedSessions: 100,
                    _sessionCache: { map: {}, list: [] },
                    [Symbol(shapeMode)]: false,
                    [Symbol(kCapture)]: false
                  },
                  keepAlive: true,
                  maxSockets: 50,
                  noDelay: true,
                  servername: 'dynamodb.us-east-1.amazonaws.com',
                  _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
                  encoding: null,
                  keepAliveInitialDelay: 1000
                }
              }
            ]
          },
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: 50,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: {}, list: [] },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/',
        _ended: true,
        res: [Circular *3],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'dynamodb.us-east-1.amazonaws.com',
        protocol: 'https:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: bound onceWrapper] {
                listener: [Function (anonymous)]
              },
              [Function: onClose]
            ],
            end: [Function: onReadableStreamEnd],
            error: [Function: bound onceWrapper] {
              listener: [Function: freeSocketErrorListener]
            },
            newListener: [Function: keylogNewListener],
            connect: undefined,
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            data: undefined,
            drain: undefined
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'dynamodb.us-east-1.amazonaws.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 0,
            [Symbol(kState)]: 17563908,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: null
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: null,
          timeout: 0,
          [Symbol(alpncallback)]: null,
          [Symbol(res)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            headers: {
              'content-type': 'application/x-amz-json-1.0',
              'x-amz-target': 'DynamoDB_20120810.Query',
              'content-length': '231',
              'x-amz-user-agent': 'aws-sdk-js/3.899.0',
              'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
              host: 'dynamodb.us-east-1.amazonaws.com',
              'amz-sdk-invocation-id': '8d622a75-95ee-468c-b1e6-3c4f589f9c95',
              'amz-sdk-request': 'attempt=1; max=3',
              'x-amz-date': '20251002T200903Z',
              'x-amz-content-sha256': 'e029bc3e38109487f4c811be2a6c556007183d62cf922805955f6e933c1bbf79',
              authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=c00277cc26436e375e99af8f914f75968e608ad9ea921e20cf7e85740b7f0980'
            },
            host: 'dynamodb.us-east-1.amazonaws.com',
            method: 'POST',
            path: null,
            port: 443,
            agent: <ref *2> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                maxSockets: 50,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {
                'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
              },
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: 50,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            auth: undefined,
            _defaultAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            servername: 'dynamodb.us-east-1.amazonaws.com',
            _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
            encoding: null,
            keepAliveInitialDelay: 1000
          }
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'content-type': [ 'content-type', 'application/x-amz-json-1.0' ],
          'x-amz-target': [ 'x-amz-target', 'DynamoDB_20120810.Query' ],
          'content-length': [ 'content-length', '231' ],
          'x-amz-user-agent': [ 'x-amz-user-agent', 'aws-sdk-js/3.899.0' ],
          'user-agent': [
            'user-agent',
            'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g'
          ],
          host: [ 'host', 'dynamodb.us-east-1.amazonaws.com' ],
          'amz-sdk-invocation-id': [
            'amz-sdk-invocation-id',
            '8d622a75-95ee-468c-b1e6-3c4f589f9c95'
          ],
          'amz-sdk-request': [ 'amz-sdk-request', 'attempt=1; max=3' ],
          'x-amz-date': [ 'x-amz-date', '20251002T200903Z' ],
          'x-amz-content-sha256': [
            'x-amz-content-sha256',
            'e029bc3e38109487f4c811be2a6c556007183d62cf922805955f6e933c1bbf79'
          ],
          authorization: [
            'authorization',
            'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=c00277cc26436e375e99af8f914f75968e608ad9ea921e20cf7e85740b7f0980'
          ]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 2,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Server',
        date: 'Thu, 02 Oct 2025 20:09:05 GMT',
        'content-type': 'application/x-amz-json-1.0',
        'content-length': '165',
        connection: 'keep-alive',
        'x-amzn-requestid': '1BBKB5LLK3RLDCQH408RCKEG5BVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32': '1880536678'
      },
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  },
  '$retryable': undefined,
  '$metadata': {
    httpStatusCode: 400,
    requestId: '1BBKB5LLK3RLDCQH408RCKEG5BVV4KQNSO5AEMVJF66Q9ASUAAJG',
    extendedRequestId: undefined,
    cfId: undefined,
    attempts: 1,
    totalRetryDelay: 0
  },
  name: 'ValidationException',
  __type: 'com.amazon.coral.validate#ValidationException',
  message: 'One or more parameter values were invalid: Condition parameter type does not match schema type',
  level: 'error',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:09:04.032Z'
}
{
  '$fault': 'client',
  '$response': HttpResponse {
    statusCode: 400,
    reason: 'Bad Request',
    headers: {
      server: 'Server',
      date: 'Thu, 02 Oct 2025 20:12:07 GMT',
      'content-type': 'application/x-amz-json-1.0',
      'content-length': '193',
      connection: 'keep-alive',
      'x-amzn-requestid': 'F6RQUUHOBMQNKM4AQASPTJUMJBVV4KQNSO5AEMVJF66Q9ASUAAJG',
      'x-amz-crc32': '1316514063'
    },
    body: <ref *3> IncomingMessage {
      _events: {
        close: undefined,
        error: [Function (anonymous)],
        data: undefined,
        end: [Function: responseOnEnd],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 110892924
      },
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Server',
        'Date',
        'Thu, 02 Oct 2025 20:12:07 GMT',
        'Content-Type',
        'application/x-amz-json-1.0',
        'Content-Length',
        '193',
        'Connection',
        'keep-alive',
        'x-amzn-requestid',
        'F6RQUUHOBMQNKM4AQASPTJUMJBVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32',
        '1316514063'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dynamodb.us-east-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: bound onceWrapper] {
              listener: [Function (anonymous)]
            },
            [Function: onClose]
          ],
          end: [Function: onReadableStreamEnd],
          error: [Function: bound onceWrapper] {
            listener: [Function: freeSocketErrorListener]
          },
          newListener: [Function: keylogNewListener],
          connect: undefined,
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          data: undefined,
          drain: undefined
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dynamodb.us-east-1.amazonaws.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17563908,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: null
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: null,
        timeout: 0,
        [Symbol(alpncallback)]: null,
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: -1,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 1,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          headers: {
            'content-type': 'application/x-amz-json-1.0',
            'x-amz-target': 'DynamoDB_20120810.Query',
            'content-length': '233',
            'x-amz-user-agent': 'aws-sdk-js/3.899.0',
            'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
            host: 'dynamodb.us-east-1.amazonaws.com',
            'amz-sdk-invocation-id': 'e8b7ba8d-914d-4fdf-a8fa-6aff69faee47',
            'amz-sdk-request': 'attempt=1; max=3',
            'x-amz-date': '20251002T201206Z',
            'x-amz-content-sha256': '8a5e36d2fc92c46856bad6d3735761a99a0212bcf41a6e93f314c3968028fc5a',
            authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=6bd5a9f29b46ef2aea003d79598c186d7b9e3564f83d226c2bd7005242b9a9d0'
          },
          host: 'dynamodb.us-east-1.amazonaws.com',
          method: 'POST',
          path: null,
          port: 443,
          agent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              maxSockets: 50,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {
              'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
            },
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: 50,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          auth: undefined,
          _defaultAgent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              scheduling: 'lifo',
              timeout: 5000,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          keepAlive: true,
          maxSockets: 50,
          noDelay: true,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _consuming: false,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype] {
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 233,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'POST / HTTP/1.1\r\n' +
          'content-type: application/x-amz-json-1.0\r\n' +
          'x-amz-target: DynamoDB_20120810.Query\r\n' +
          'content-length: 233\r\n' +
          'x-amz-user-agent: aws-sdk-js/3.899.0\r\n' +
          'user-agent: aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g\r\n' +
          'host: dynamodb.us-east-1.amazonaws.com\r\n' +
          'amz-sdk-invocation-id: e8b7ba8d-914d-4fdf-a8fa-6aff69faee47\r\n' +
          'amz-sdk-request: attempt=1; max=3\r\n' +
          'x-amz-date: 20251002T201206Z\r\n' +
          'x-amz-content-sha256: 8a5e36d2fc92c46856bad6d3735761a99a0212bcf41a6e93f314c3968028fc5a\r\n' +
          'authorization: AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=6bd5a9f29b46ef2aea003d79598c186d7b9e3564f83d226c2bd7005242b9a9d0\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: <ref *2> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] {
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            path: null
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {
            'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [
              <ref *1> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: false,
                _SNICallback: null,
                servername: 'dynamodb.us-east-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose]
                  ],
                  end: [Function: onReadableStreamEnd],
                  error: [Function: bound onceWrapper] {
                    listener: [Function: freeSocketErrorListener]
                  },
                  newListener: [Function: keylogNewListener],
                  connect: undefined,
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  data: undefined,
                  drain: undefined
                },
                _eventsCount: 9,
                connecting: false,
                _hadError: false,
                _parent: null,
                _host: 'dynamodb.us-east-1.amazonaws.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  highWaterMark: 16384,
                  buffer: [],
                  bufferIndex: 0,
                  length: 0,
                  pipes: [],
                  awaitDrainWriters: null,
                  [Symbol(kState)]: 60303620
                },
                _writableState: WritableState {
                  highWaterMark: 16384,
                  length: 0,
                  corked: 0,
                  onwrite: [Function: bound onwrite],
                  writelen: 0,
                  bufferedIndex: 0,
                  pendingcb: 0,
                  [Symbol(kState)]: 17563908,
                  [Symbol(kBufferedValue)]: null,
                  [Symbol(kWriteCbValue)]: null
                },
                allowHalfOpen: false,
                _maxListeners: undefined,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: null,
                timeout: 0,
                [Symbol(alpncallback)]: null,
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(verified)]: true,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: -1,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(shapeMode)]: true,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 1,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  headers: {
                    'content-type': 'application/x-amz-json-1.0',
                    'x-amz-target': 'DynamoDB_20120810.Query',
                    'content-length': '233',
                    'x-amz-user-agent': 'aws-sdk-js/3.899.0',
                    'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
                    host: 'dynamodb.us-east-1.amazonaws.com',
                    'amz-sdk-invocation-id': 'e8b7ba8d-914d-4fdf-a8fa-6aff69faee47',
                    'amz-sdk-request': 'attempt=1; max=3',
                    'x-amz-date': '20251002T201206Z',
                    'x-amz-content-sha256': '8a5e36d2fc92c46856bad6d3735761a99a0212bcf41a6e93f314c3968028fc5a',
                    authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=6bd5a9f29b46ef2aea003d79598c186d7b9e3564f83d226c2bd7005242b9a9d0'
                  },
                  host: 'dynamodb.us-east-1.amazonaws.com',
                  method: 'POST',
                  path: null,
                  port: 443,
                  agent: [Circular *2],
                  auth: undefined,
                  _defaultAgent: Agent {
                    _events: [Object: null prototype] {
                      free: [Function (anonymous)],
                      newListener: [Function: maybeEnableKeylog]
                    },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: [Object: null prototype] {
                      keepAlive: true,
                      scheduling: 'lifo',
                      timeout: 5000,
                      noDelay: true,
                      path: null
                    },
                    requests: [Object: null prototype] {},
                    sockets: [Object: null prototype] {},
                    freeSockets: [Object: null prototype] {},
                    keepAliveMsecs: 1000,
                    keepAlive: true,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    scheduling: 'lifo',
                    maxTotalSockets: Infinity,
                    totalSocketCount: 0,
                    maxCachedSessions: 100,
                    _sessionCache: { map: {}, list: [] },
                    [Symbol(shapeMode)]: false,
                    [Symbol(kCapture)]: false
                  },
                  keepAlive: true,
                  maxSockets: 50,
                  noDelay: true,
                  servername: 'dynamodb.us-east-1.amazonaws.com',
                  _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
                  encoding: null,
                  keepAliveInitialDelay: 1000
                }
              }
            ]
          },
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: 50,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: {}, list: [] },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/',
        _ended: true,
        res: [Circular *3],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'dynamodb.us-east-1.amazonaws.com',
        protocol: 'https:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: bound onceWrapper] {
                listener: [Function (anonymous)]
              },
              [Function: onClose]
            ],
            end: [Function: onReadableStreamEnd],
            error: [Function: bound onceWrapper] {
              listener: [Function: freeSocketErrorListener]
            },
            newListener: [Function: keylogNewListener],
            connect: undefined,
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            data: undefined,
            drain: undefined
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'dynamodb.us-east-1.amazonaws.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 0,
            [Symbol(kState)]: 17563908,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: null
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: null,
          timeout: 0,
          [Symbol(alpncallback)]: null,
          [Symbol(res)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            headers: {
              'content-type': 'application/x-amz-json-1.0',
              'x-amz-target': 'DynamoDB_20120810.Query',
              'content-length': '233',
              'x-amz-user-agent': 'aws-sdk-js/3.899.0',
              'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
              host: 'dynamodb.us-east-1.amazonaws.com',
              'amz-sdk-invocation-id': 'e8b7ba8d-914d-4fdf-a8fa-6aff69faee47',
              'amz-sdk-request': 'attempt=1; max=3',
              'x-amz-date': '20251002T201206Z',
              'x-amz-content-sha256': '8a5e36d2fc92c46856bad6d3735761a99a0212bcf41a6e93f314c3968028fc5a',
              authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=6bd5a9f29b46ef2aea003d79598c186d7b9e3564f83d226c2bd7005242b9a9d0'
            },
            host: 'dynamodb.us-east-1.amazonaws.com',
            method: 'POST',
            path: null,
            port: 443,
            agent: <ref *2> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                maxSockets: 50,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {
                'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
              },
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: 50,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            auth: undefined,
            _defaultAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            servername: 'dynamodb.us-east-1.amazonaws.com',
            _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
            encoding: null,
            keepAliveInitialDelay: 1000
          }
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'content-type': [ 'content-type', 'application/x-amz-json-1.0' ],
          'x-amz-target': [ 'x-amz-target', 'DynamoDB_20120810.Query' ],
          'content-length': [ 'content-length', '233' ],
          'x-amz-user-agent': [ 'x-amz-user-agent', 'aws-sdk-js/3.899.0' ],
          'user-agent': [
            'user-agent',
            'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g'
          ],
          host: [ 'host', 'dynamodb.us-east-1.amazonaws.com' ],
          'amz-sdk-invocation-id': [
            'amz-sdk-invocation-id',
            'e8b7ba8d-914d-4fdf-a8fa-6aff69faee47'
          ],
          'amz-sdk-request': [ 'amz-sdk-request', 'attempt=1; max=3' ],
          'x-amz-date': [ 'x-amz-date', '20251002T201206Z' ],
          'x-amz-content-sha256': [
            'x-amz-content-sha256',
            '8a5e36d2fc92c46856bad6d3735761a99a0212bcf41a6e93f314c3968028fc5a'
          ],
          authorization: [
            'authorization',
            'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=6bd5a9f29b46ef2aea003d79598c186d7b9e3564f83d226c2bd7005242b9a9d0'
          ]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 2,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Server',
        date: 'Thu, 02 Oct 2025 20:12:07 GMT',
        'content-type': 'application/x-amz-json-1.0',
        'content-length': '193',
        connection: 'keep-alive',
        'x-amzn-requestid': 'F6RQUUHOBMQNKM4AQASPTJUMJBVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32': '1316514063'
      },
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  },
  '$retryable': undefined,
  '$metadata': {
    httpStatusCode: 400,
    requestId: 'F6RQUUHOBMQNKM4AQASPTJUMJBVV4KQNSO5AEMVJF66Q9ASUAAJG',
    extendedRequestId: undefined,
    cfId: undefined,
    attempts: 1,
    totalRetryDelay: 0
  },
  name: 'ValidationException',
  __type: 'com.amazon.coral.validate#ValidationException',
  message: 'Invalid KeyConditionExpression: An expression attribute name used in the document path is not defined; attribute name: #PK',
  level: 'error',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:12:06.859Z'
}
{
  '$fault': 'client',
  '$response': HttpResponse {
    statusCode: 400,
    reason: 'Bad Request',
    headers: {
      server: 'Server',
      date: 'Thu, 02 Oct 2025 20:13:38 GMT',
      'content-type': 'application/x-amz-json-1.0',
      'content-length': '165',
      connection: 'keep-alive',
      'x-amzn-requestid': 'NNJESUM2CCBAJ7EUP70644PAR3VV4KQNSO5AEMVJF66Q9ASUAAJG',
      'x-amz-crc32': '1880536678'
    },
    body: <ref *3> IncomingMessage {
      _events: {
        close: undefined,
        error: [Function (anonymous)],
        data: undefined,
        end: [Function: responseOnEnd],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 110892924
      },
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Server',
        'Date',
        'Thu, 02 Oct 2025 20:13:38 GMT',
        'Content-Type',
        'application/x-amz-json-1.0',
        'Content-Length',
        '165',
        'Connection',
        'keep-alive',
        'x-amzn-RequestId',
        'NNJESUM2CCBAJ7EUP70644PAR3VV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32',
        '1880536678'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dynamodb.us-east-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: bound onceWrapper] {
              listener: [Function (anonymous)]
            },
            [Function: onClose]
          ],
          end: [Function: onReadableStreamEnd],
          error: [Function: bound onceWrapper] {
            listener: [Function: freeSocketErrorListener]
          },
          newListener: [Function: keylogNewListener],
          connect: undefined,
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          data: undefined,
          drain: undefined
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dynamodb.us-east-1.amazonaws.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17563908,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: null
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: null,
        timeout: 0,
        [Symbol(alpncallback)]: null,
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: -1,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 1,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          headers: {
            'content-type': 'application/x-amz-json-1.0',
            'x-amz-target': 'DynamoDB_20120810.Query',
            'content-length': '284',
            'x-amz-user-agent': 'aws-sdk-js/3.899.0',
            'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
            host: 'dynamodb.us-east-1.amazonaws.com',
            'amz-sdk-invocation-id': 'a846b8f0-36ee-4a52-9d94-6784d8b55337',
            'amz-sdk-request': 'attempt=1; max=3',
            'x-amz-date': '20251002T201337Z',
            'x-amz-content-sha256': '40fed958cf615fa4da942f0c1e8801fede32ed72241b90ed22dcd94f4597fe51',
            authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=f79771aaca7fc48c81d7bff3be21737106f05bd984ae94950a41a1caee1648ce'
          },
          host: 'dynamodb.us-east-1.amazonaws.com',
          method: 'POST',
          path: null,
          port: 443,
          agent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              maxSockets: 50,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {
              'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
            },
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: 50,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          auth: undefined,
          _defaultAgent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              scheduling: 'lifo',
              timeout: 5000,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          keepAlive: true,
          maxSockets: 50,
          noDelay: true,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _consuming: false,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype] {
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 284,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'POST / HTTP/1.1\r\n' +
          'content-type: application/x-amz-json-1.0\r\n' +
          'x-amz-target: DynamoDB_20120810.Query\r\n' +
          'content-length: 284\r\n' +
          'x-amz-user-agent: aws-sdk-js/3.899.0\r\n' +
          'user-agent: aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g\r\n' +
          'host: dynamodb.us-east-1.amazonaws.com\r\n' +
          'amz-sdk-invocation-id: a846b8f0-36ee-4a52-9d94-6784d8b55337\r\n' +
          'amz-sdk-request: attempt=1; max=3\r\n' +
          'x-amz-date: 20251002T201337Z\r\n' +
          'x-amz-content-sha256: 40fed958cf615fa4da942f0c1e8801fede32ed72241b90ed22dcd94f4597fe51\r\n' +
          'authorization: AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=f79771aaca7fc48c81d7bff3be21737106f05bd984ae94950a41a1caee1648ce\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: <ref *2> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] {
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            path: null
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {
            'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [
              <ref *1> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: false,
                _SNICallback: null,
                servername: 'dynamodb.us-east-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose]
                  ],
                  end: [Function: onReadableStreamEnd],
                  error: [Function: bound onceWrapper] {
                    listener: [Function: freeSocketErrorListener]
                  },
                  newListener: [Function: keylogNewListener],
                  connect: undefined,
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  data: undefined,
                  drain: undefined
                },
                _eventsCount: 9,
                connecting: false,
                _hadError: false,
                _parent: null,
                _host: 'dynamodb.us-east-1.amazonaws.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  highWaterMark: 16384,
                  buffer: [],
                  bufferIndex: 0,
                  length: 0,
                  pipes: [],
                  awaitDrainWriters: null,
                  [Symbol(kState)]: 60303620
                },
                _writableState: WritableState {
                  highWaterMark: 16384,
                  length: 0,
                  corked: 0,
                  onwrite: [Function: bound onwrite],
                  writelen: 0,
                  bufferedIndex: 0,
                  pendingcb: 0,
                  [Symbol(kState)]: 17563908,
                  [Symbol(kBufferedValue)]: null,
                  [Symbol(kWriteCbValue)]: null
                },
                allowHalfOpen: false,
                _maxListeners: undefined,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: null,
                timeout: 0,
                [Symbol(alpncallback)]: null,
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(verified)]: true,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: -1,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(shapeMode)]: true,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 1,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  headers: {
                    'content-type': 'application/x-amz-json-1.0',
                    'x-amz-target': 'DynamoDB_20120810.Query',
                    'content-length': '284',
                    'x-amz-user-agent': 'aws-sdk-js/3.899.0',
                    'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
                    host: 'dynamodb.us-east-1.amazonaws.com',
                    'amz-sdk-invocation-id': 'a846b8f0-36ee-4a52-9d94-6784d8b55337',
                    'amz-sdk-request': 'attempt=1; max=3',
                    'x-amz-date': '20251002T201337Z',
                    'x-amz-content-sha256': '40fed958cf615fa4da942f0c1e8801fede32ed72241b90ed22dcd94f4597fe51',
                    authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=f79771aaca7fc48c81d7bff3be21737106f05bd984ae94950a41a1caee1648ce'
                  },
                  host: 'dynamodb.us-east-1.amazonaws.com',
                  method: 'POST',
                  path: null,
                  port: 443,
                  agent: [Circular *2],
                  auth: undefined,
                  _defaultAgent: Agent {
                    _events: [Object: null prototype] {
                      free: [Function (anonymous)],
                      newListener: [Function: maybeEnableKeylog]
                    },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: [Object: null prototype] {
                      keepAlive: true,
                      scheduling: 'lifo',
                      timeout: 5000,
                      noDelay: true,
                      path: null
                    },
                    requests: [Object: null prototype] {},
                    sockets: [Object: null prototype] {},
                    freeSockets: [Object: null prototype] {},
                    keepAliveMsecs: 1000,
                    keepAlive: true,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    scheduling: 'lifo',
                    maxTotalSockets: Infinity,
                    totalSocketCount: 0,
                    maxCachedSessions: 100,
                    _sessionCache: { map: {}, list: [] },
                    [Symbol(shapeMode)]: false,
                    [Symbol(kCapture)]: false
                  },
                  keepAlive: true,
                  maxSockets: 50,
                  noDelay: true,
                  servername: 'dynamodb.us-east-1.amazonaws.com',
                  _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
                  encoding: null,
                  keepAliveInitialDelay: 1000
                }
              }
            ]
          },
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: 50,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: {}, list: [] },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/',
        _ended: true,
        res: [Circular *3],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'dynamodb.us-east-1.amazonaws.com',
        protocol: 'https:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: bound onceWrapper] {
                listener: [Function (anonymous)]
              },
              [Function: onClose]
            ],
            end: [Function: onReadableStreamEnd],
            error: [Function: bound onceWrapper] {
              listener: [Function: freeSocketErrorListener]
            },
            newListener: [Function: keylogNewListener],
            connect: undefined,
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            data: undefined,
            drain: undefined
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'dynamodb.us-east-1.amazonaws.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 0,
            [Symbol(kState)]: 17563908,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: null
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: null,
          timeout: 0,
          [Symbol(alpncallback)]: null,
          [Symbol(res)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            headers: {
              'content-type': 'application/x-amz-json-1.0',
              'x-amz-target': 'DynamoDB_20120810.Query',
              'content-length': '284',
              'x-amz-user-agent': 'aws-sdk-js/3.899.0',
              'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
              host: 'dynamodb.us-east-1.amazonaws.com',
              'amz-sdk-invocation-id': 'a846b8f0-36ee-4a52-9d94-6784d8b55337',
              'amz-sdk-request': 'attempt=1; max=3',
              'x-amz-date': '20251002T201337Z',
              'x-amz-content-sha256': '40fed958cf615fa4da942f0c1e8801fede32ed72241b90ed22dcd94f4597fe51',
              authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=f79771aaca7fc48c81d7bff3be21737106f05bd984ae94950a41a1caee1648ce'
            },
            host: 'dynamodb.us-east-1.amazonaws.com',
            method: 'POST',
            path: null,
            port: 443,
            agent: <ref *2> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                maxSockets: 50,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {
                'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
              },
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: 50,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            auth: undefined,
            _defaultAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            servername: 'dynamodb.us-east-1.amazonaws.com',
            _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
            encoding: null,
            keepAliveInitialDelay: 1000
          }
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'content-type': [ 'content-type', 'application/x-amz-json-1.0' ],
          'x-amz-target': [ 'x-amz-target', 'DynamoDB_20120810.Query' ],
          'content-length': [ 'content-length', '284' ],
          'x-amz-user-agent': [ 'x-amz-user-agent', 'aws-sdk-js/3.899.0' ],
          'user-agent': [
            'user-agent',
            'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g'
          ],
          host: [ 'host', 'dynamodb.us-east-1.amazonaws.com' ],
          'amz-sdk-invocation-id': [
            'amz-sdk-invocation-id',
            'a846b8f0-36ee-4a52-9d94-6784d8b55337'
          ],
          'amz-sdk-request': [ 'amz-sdk-request', 'attempt=1; max=3' ],
          'x-amz-date': [ 'x-amz-date', '20251002T201337Z' ],
          'x-amz-content-sha256': [
            'x-amz-content-sha256',
            '40fed958cf615fa4da942f0c1e8801fede32ed72241b90ed22dcd94f4597fe51'
          ],
          authorization: [
            'authorization',
            'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=f79771aaca7fc48c81d7bff3be21737106f05bd984ae94950a41a1caee1648ce'
          ]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 2,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Server',
        date: 'Thu, 02 Oct 2025 20:13:38 GMT',
        'content-type': 'application/x-amz-json-1.0',
        'content-length': '165',
        connection: 'keep-alive',
        'x-amzn-requestid': 'NNJESUM2CCBAJ7EUP70644PAR3VV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32': '1880536678'
      },
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  },
  '$retryable': undefined,
  '$metadata': {
    httpStatusCode: 400,
    requestId: 'NNJESUM2CCBAJ7EUP70644PAR3VV4KQNSO5AEMVJF66Q9ASUAAJG',
    extendedRequestId: undefined,
    cfId: undefined,
    attempts: 1,
    totalRetryDelay: 0
  },
  name: 'ValidationException',
  __type: 'com.amazon.coral.validate#ValidationException',
  message: 'One or more parameter values were invalid: Condition parameter type does not match schema type',
  level: 'error',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:13:37.574Z'
}
{
  message: 'Query command to database complete {"$metadata":{"httpStatusCode":200,"requestId":"RL63NR8KJUHL6QR7CMAJ8PIS23VV4KQNSO5AEMVJF66Q9ASUAAJG","attempts":1,"totalRetryDelay":0},"Count":1,"Items":[{"following":{},"SK":"METADATA","password":"$2b$10$RZWpneGNmJjUsDjNWastAumap/NrDmqDvRzb3obROPTLMtZ4rjR4e","username":"nnamdionyeije","PK":"USER#user5dbd0e3b-6718-46ca-9867-f2df7765fea5","email":"nnamdi959@revature.net"}],"ScannedCount":1}',
  level: 'info',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:14:03.923Z'
}
{
  message: 'Query command to database complete {"$metadata":{"httpStatusCode":200,"requestId":"RHB44EE5O54FVGP97R1ALBHNG3VV4KQNSO5AEMVJF66Q9ASUAAJG","attempts":1,"totalRetryDelay":0},"Count":1,"Items":[{"password":"$2b$10$RZWpneGNmJjUsDjNWastAumap/NrDmqDvRzb3obROPTLMtZ4rjR4e","username":"nnamdionyeije","PK":"USER#user5dbd0e3b-6718-46ca-9867-f2df7765fea5","email":"nnamdi959@revature.net","following":{},"SK":"METADATA"}],"ScannedCount":1}',
  level: 'info',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:14:47.080Z'
}
{
  message: 'Query command to database complete {"$metadata":{"httpStatusCode":200,"requestId":"LRC0F4N7UTP2M3A5CLA3CJT9NFVV4KQNSO5AEMVJF66Q9ASUAAJG","attempts":1,"totalRetryDelay":0},"Count":1,"Items":[{"following":{},"SK":"METADATA","password":"$2b$10$RZWpneGNmJjUsDjNWastAumap/NrDmqDvRzb3obROPTLMtZ4rjR4e","username":"revature101","PK":"USER#user54fcb9e1-5d8e-4d43-bd99-69cf01e8a9ef","email":"example@revature.net"}],"ScannedCount":1}',
  level: 'info',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:15:12.585Z'
}
{
  '$fault': 'client',
  '$response': HttpResponse {
    statusCode: 400,
    reason: 'Bad Request',
    headers: {
      server: 'Server',
      date: 'Thu, 02 Oct 2025 20:41:01 GMT',
      'content-type': 'application/x-amz-json-1.0',
      'content-length': '140',
      connection: 'keep-alive',
      'x-amzn-requestid': '8V3OBMMQEQGH7K9E5L8CMOO9NBVV4KQNSO5AEMVJF66Q9ASUAAJG',
      'x-amz-crc32': '317897489'
    },
    body: <ref *3> IncomingMessage {
      _events: {
        close: undefined,
        error: [Function (anonymous)],
        data: undefined,
        end: [Function: responseOnEnd],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 110892924
      },
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Server',
        'Date',
        'Thu, 02 Oct 2025 20:41:01 GMT',
        'Content-Type',
        'application/x-amz-json-1.0',
        'Content-Length',
        '140',
        'Connection',
        'keep-alive',
        'x-amzn-RequestId',
        '8V3OBMMQEQGH7K9E5L8CMOO9NBVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32',
        '317897489'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dynamodb.us-east-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: bound onceWrapper] {
              listener: [Function (anonymous)]
            },
            [Function: onClose]
          ],
          end: [Function: onReadableStreamEnd],
          error: [Function: bound onceWrapper] {
            listener: [Function: freeSocketErrorListener]
          },
          newListener: [Function: keylogNewListener],
          connect: undefined,
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          data: undefined,
          drain: undefined
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dynamodb.us-east-1.amazonaws.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17563908,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: null
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: null,
        timeout: 0,
        [Symbol(alpncallback)]: null,
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: -1,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: null,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: [Function: noop],
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 1,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          headers: {
            'content-type': 'application/x-amz-json-1.0',
            'x-amz-target': 'DynamoDB_20120810.UpdateItem',
            'content-length': '267',
            'x-amz-user-agent': 'aws-sdk-js/3.899.0',
            'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
            host: 'dynamodb.us-east-1.amazonaws.com',
            'amz-sdk-invocation-id': '7d28fa42-a038-4f2c-8cc4-ff65e5b4a7ab',
            'amz-sdk-request': 'attempt=1; max=3',
            'x-amz-date': '20251002T204059Z',
            'x-amz-content-sha256': '521eed9d7f9bdcb581104fc17e8973f412494c906f9589938b48b585dc862c1f',
            authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d05fb9513f06866b0d99b02a8f08c24b086e8543124c1a295a265166fe73c2e8'
          },
          host: 'dynamodb.us-east-1.amazonaws.com',
          method: 'POST',
          path: null,
          port: 443,
          agent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              maxSockets: 50,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {
              'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
            },
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: 50,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          auth: undefined,
          _defaultAgent: Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] {
              keepAlive: true,
              scheduling: 'lifo',
              timeout: 5000,
              noDelay: true,
              path: null
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            _sessionCache: { map: {}, list: [] },
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          keepAlive: true,
          maxSockets: 50,
          noDelay: true,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _consuming: false,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype] {
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 267,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'POST / HTTP/1.1\r\n' +
          'content-type: application/x-amz-json-1.0\r\n' +
          'x-amz-target: DynamoDB_20120810.UpdateItem\r\n' +
          'content-length: 267\r\n' +
          'x-amz-user-agent: aws-sdk-js/3.899.0\r\n' +
          'user-agent: aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g\r\n' +
          'host: dynamodb.us-east-1.amazonaws.com\r\n' +
          'amz-sdk-invocation-id: 7d28fa42-a038-4f2c-8cc4-ff65e5b4a7ab\r\n' +
          'amz-sdk-request: attempt=1; max=3\r\n' +
          'x-amz-date: 20251002T204059Z\r\n' +
          'x-amz-content-sha256: 521eed9d7f9bdcb581104fc17e8973f412494c906f9589938b48b585dc862c1f\r\n' +
          'authorization: AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d05fb9513f06866b0d99b02a8f08c24b086e8543124c1a295a265166fe73c2e8\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: <ref *2> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] {
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            path: null
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {
            'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [
              <ref *1> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: false,
                _SNICallback: null,
                servername: 'dynamodb.us-east-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose]
                  ],
                  end: [Function: onReadableStreamEnd],
                  error: [Function: bound onceWrapper] {
                    listener: [Function: freeSocketErrorListener]
                  },
                  newListener: [Function: keylogNewListener],
                  connect: undefined,
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  data: undefined,
                  drain: undefined
                },
                _eventsCount: 9,
                connecting: false,
                _hadError: false,
                _parent: null,
                _host: 'dynamodb.us-east-1.amazonaws.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  highWaterMark: 16384,
                  buffer: [],
                  bufferIndex: 0,
                  length: 0,
                  pipes: [],
                  awaitDrainWriters: null,
                  [Symbol(kState)]: 60303620
                },
                _writableState: WritableState {
                  highWaterMark: 16384,
                  length: 0,
                  corked: 0,
                  onwrite: [Function: bound onwrite],
                  writelen: 0,
                  bufferedIndex: 0,
                  pendingcb: 0,
                  [Symbol(kState)]: 17563908,
                  [Symbol(kBufferedValue)]: null,
                  [Symbol(kWriteCbValue)]: null
                },
                allowHalfOpen: false,
                _maxListeners: undefined,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: null,
                timeout: 0,
                [Symbol(alpncallback)]: null,
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(verified)]: true,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: -1,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *1]
                  },
                  _parentWrap: null,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: true,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: [Function: noop],
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *1]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(shapeMode)]: true,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 1,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  headers: {
                    'content-type': 'application/x-amz-json-1.0',
                    'x-amz-target': 'DynamoDB_20120810.UpdateItem',
                    'content-length': '267',
                    'x-amz-user-agent': 'aws-sdk-js/3.899.0',
                    'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
                    host: 'dynamodb.us-east-1.amazonaws.com',
                    'amz-sdk-invocation-id': '7d28fa42-a038-4f2c-8cc4-ff65e5b4a7ab',
                    'amz-sdk-request': 'attempt=1; max=3',
                    'x-amz-date': '20251002T204059Z',
                    'x-amz-content-sha256': '521eed9d7f9bdcb581104fc17e8973f412494c906f9589938b48b585dc862c1f',
                    authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d05fb9513f06866b0d99b02a8f08c24b086e8543124c1a295a265166fe73c2e8'
                  },
                  host: 'dynamodb.us-east-1.amazonaws.com',
                  method: 'POST',
                  path: null,
                  port: 443,
                  agent: [Circular *2],
                  auth: undefined,
                  _defaultAgent: Agent {
                    _events: [Object: null prototype] {
                      free: [Function (anonymous)],
                      newListener: [Function: maybeEnableKeylog]
                    },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: [Object: null prototype] {
                      keepAlive: true,
                      scheduling: 'lifo',
                      timeout: 5000,
                      noDelay: true,
                      path: null
                    },
                    requests: [Object: null prototype] {},
                    sockets: [Object: null prototype] {},
                    freeSockets: [Object: null prototype] {},
                    keepAliveMsecs: 1000,
                    keepAlive: true,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    scheduling: 'lifo',
                    maxTotalSockets: Infinity,
                    totalSocketCount: 0,
                    maxCachedSessions: 100,
                    _sessionCache: { map: {}, list: [] },
                    [Symbol(shapeMode)]: false,
                    [Symbol(kCapture)]: false
                  },
                  keepAlive: true,
                  maxSockets: 50,
                  noDelay: true,
                  servername: 'dynamodb.us-east-1.amazonaws.com',
                  _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
                  encoding: null,
                  keepAliveInitialDelay: 1000
                }
              }
            ]
          },
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: 50,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: {}, list: [] },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/',
        _ended: true,
        res: [Circular *3],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'dynamodb.us-east-1.amazonaws.com',
        protocol: 'https:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'dynamodb.us-east-1.amazonaws.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: bound onceWrapper] {
                listener: [Function (anonymous)]
              },
              [Function: onClose]
            ],
            end: [Function: onReadableStreamEnd],
            error: [Function: bound onceWrapper] {
              listener: [Function: freeSocketErrorListener]
            },
            newListener: [Function: keylogNewListener],
            connect: undefined,
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            data: undefined,
            drain: undefined
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'dynamodb.us-east-1.amazonaws.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 0,
            [Symbol(kState)]: 17563908,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: null
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: null,
          timeout: 0,
          [Symbol(alpncallback)]: null,
          [Symbol(res)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: TLSWrap {
            _parent: TCP {
              reading: [Getter/Setter],
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *1]
            },
            _parentWrap: null,
            _secureContext: SecureContext { context: SecureContext {} },
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: [Function: noop],
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            headers: {
              'content-type': 'application/x-amz-json-1.0',
              'x-amz-target': 'DynamoDB_20120810.UpdateItem',
              'content-length': '267',
              'x-amz-user-agent': 'aws-sdk-js/3.899.0',
              'user-agent': 'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g',
              host: 'dynamodb.us-east-1.amazonaws.com',
              'amz-sdk-invocation-id': '7d28fa42-a038-4f2c-8cc4-ff65e5b4a7ab',
              'amz-sdk-request': 'attempt=1; max=3',
              'x-amz-date': '20251002T204059Z',
              'x-amz-content-sha256': '521eed9d7f9bdcb581104fc17e8973f412494c906f9589938b48b585dc862c1f',
              authorization: 'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d05fb9513f06866b0d99b02a8f08c24b086e8543124c1a295a265166fe73c2e8'
            },
            host: 'dynamodb.us-east-1.amazonaws.com',
            method: 'POST',
            path: null,
            port: 443,
            agent: <ref *2> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                maxSockets: 50,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {
                'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::': [ [Circular *1] ]
              },
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: 50,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            auth: undefined,
            _defaultAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            keepAlive: true,
            maxSockets: 50,
            noDelay: true,
            servername: 'dynamodb.us-east-1.amazonaws.com',
            _agentKey: 'dynamodb.us-east-1.amazonaws.com:443:::::::::::::::::::::',
            encoding: null,
            keepAliveInitialDelay: 1000
          }
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'content-type': [ 'content-type', 'application/x-amz-json-1.0' ],
          'x-amz-target': [ 'x-amz-target', 'DynamoDB_20120810.UpdateItem' ],
          'content-length': [ 'content-length', '267' ],
          'x-amz-user-agent': [ 'x-amz-user-agent', 'aws-sdk-js/3.899.0' ],
          'user-agent': [
            'user-agent',
            'aws-sdk-js/3.899.0 ua/2.1 os/win32#10.0.19045 lang/js md/nodejs#22.19.0 api/dynamodb#3.899.0 m/d,E,P,g'
          ],
          host: [ 'host', 'dynamodb.us-east-1.amazonaws.com' ],
          'amz-sdk-invocation-id': [
            'amz-sdk-invocation-id',
            '7d28fa42-a038-4f2c-8cc4-ff65e5b4a7ab'
          ],
          'amz-sdk-request': [ 'amz-sdk-request', 'attempt=1; max=3' ],
          'x-amz-date': [ 'x-amz-date', '20251002T204059Z' ],
          'x-amz-content-sha256': [
            'x-amz-content-sha256',
            '521eed9d7f9bdcb581104fc17e8973f412494c906f9589938b48b585dc862c1f'
          ],
          authorization: [
            'authorization',
            'AWS4-HMAC-SHA256 Credential=AKIA6G75DMQAAJ4I2I5H/20251002/us-east-1/dynamodb/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-target;x-amz-user-agent, Signature=d05fb9513f06866b0d99b02a8f08c24b086e8543124c1a295a265166fe73c2e8'
          ]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 2,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Server',
        date: 'Thu, 02 Oct 2025 20:41:01 GMT',
        'content-type': 'application/x-amz-json-1.0',
        'content-length': '140',
        connection: 'keep-alive',
        'x-amzn-requestid': '8V3OBMMQEQGH7K9E5L8CMOO9NBVV4KQNSO5AEMVJF66Q9ASUAAJG',
        'x-amz-crc32': '317897489'
      },
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  },
  '$retryable': undefined,
  '$metadata': {
    httpStatusCode: 400,
    requestId: '8V3OBMMQEQGH7K9E5L8CMOO9NBVV4KQNSO5AEMVJF66Q9ASUAAJG',
    extendedRequestId: undefined,
    cfId: undefined,
    attempts: 1,
    totalRetryDelay: 0
  },
  name: 'ValidationException',
  __type: 'com.amazon.coral.validate#ValidationException',
  message: 'ExpressionAttributeNames can only be specified when using expressions',
  level: 'error',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:41:00.110Z'
}
{
  message: 'UPDATE command to databse complete {"$metadata":{"httpStatusCode":200,"requestId":"Q45FVGP8VIAIO4MS9EFJ4LMFNJVV4KQNSO5AEMVJF66Q9ASUAAJG","attempts":1,"totalRetryDelay":0}}',
  level: 'info',
  label: 'HeartSync Backend',
  timestamp: '2025-10-02T20:41:35.048Z'
}
